- name: Install apt dependencies
  apt:
    name: "{{item}}"
    state: present
    update_cache: yes
  with_items:
    - apache2
    - tomcat7
    - unzip

- name: Copy custom tomcat settings
  copy:
    src: tomcat7-defaults
    dest: /etc/default/tomcat7
    owner: root
    group: root
    mode: 0644
        
- name: Download war file
  get_url:
    url: https://sourceforge.net/projects/openmrs/files/releases/OpenMRS_Reference_Application_2.6.1/openmrs.war
    dest: /var/lib/tomcat7/webapps/openmrs.war
    mode: 0644
    owner: tomcat7
    timeout: 60 # Sourceforge is slow
    
- name: Restart tomcat
  service:
    name: tomcat7
    state: restarted
    
- name: Unpack war file
  unarchive:
    src: /var/lib/tomcat7/webapps/openmrs.war
    dest: /var/lib/tomcat7/webapps/openmrs/
    copy: no
    mode: 0755
    owner: tomcat7
    group: tomcat7
    
- name: Create OpenMRS directory
  file:
    path: /var/lib/OpenMRS
    owner: tomcat7
    group: tomcat7
    state: directory
    mode: 0755

# TODO: initial setup in general needs to be more robust (i.e. with fail criteria)
# TODO: maybe refactor the POST bodies to be constructed from conf files
- name: Run initialsetup wizard (step 1)
  uri:
    url: http://localhost:8080/openmrs/initialsetup
    method: GET
    return_content: yes
  register: initial_response
  
- name: Run initial setup wizard (step 2)
  uri:
    url: http://localhost:8080/openmrs/initialsetup
    method: POST
    body: "page=chooselang.vm&locale=en&continue.x=26&continue.y=46"
    return_content: yes
    headers:
      Cookie: "{{initial_response.set_cookie}}"
  register: response
      
- name: Run initial setup wizard (step 3)
  uri:
    url: http://localhost:8080/openmrs/initialsetup
    method: POST
    body: "page=installmethod.vm&install_method=advanced&continue.x=29&continue.y=29"
    return_content: yes
    headers:
      Cookie: "{{initial_response.set_cookie}}"
  register: response
  
# TODO: db connection needs to be in variables rather than hard-coded
- name: Run initial setup wizard (step 4)
  uri:
    url: http://localhost:8080/openmrs/initialsetup
    method: POST
    body: "page=databasesetup.vm&database_connection=jdbc%3Amysql%3A%2F%2F192.168.50.11%3A3306%2F%40DBNAME%40%3FautoReconnect%3Dtrue%26sessionVariables%3Ddefault_storage_engine%3DInnoDB%26useUnicode%3Dtrue%26characterEncoding%3DUTF-8&database_driver=&openmrs_current_database_name=openmrs&current_openmrs_database=no&openmrs_new_database_name=openmrs&create_database_username=openmrs&create_database_password=openmrs&continue.x=21&continue.y=23"
    return_content: yes
    headers:
      Cookie: "{{initial_response.set_cookie}}"
  register: response
    
- name: Run initial setup wizard (step 5)
  uri:
    url: http://localhost:8080/openmrs/initialsetup
    method: POST
    body: "page=databasetablesanduser.vm&create_tables=yes&add_demo_data=no&current_database_user=yes&current_database_username=openmrs&current_database_password=openmrs&create_user_username=root&create_user_password=&continue.x=32&continue.y=33"
    return_content: yes
    headers:
      Cookie: "{{initial_response.set_cookie}}"
  register: response
  
- name: Run initial setup wizard (step 6)
  uri:
    url: http://localhost:8080/openmrs/initialsetup
    method: POST
    body: "page=otherruntimeproperties.vm&module_web_admin=no&auto_update_database=no&continue.x=33&continue.y=35"
    return_content: yes
    headers:
      Cookie: "{{initial_response.set_cookie}}"
  register: response
  
- name: Run initial setup wizard (step 7)
  uri:
    url: http://localhost:8080/openmrs/initialsetup
    method: POST
    body: "page=adminusersetup.vm&new_admin_password=Admin123&new_admin_password_confirm=Admin123&continue.x=32&continue.y=23"
    return_content: yes
    headers:
      Cookie: "{{initial_response.set_cookie}}"
  register: response
  
- name: Run initial setup wizard (step 8)
  uri:
    url: http://localhost:8080/openmrs/initialsetup
    method: POST
    body: "page=adminusersetup.vm&new_admin_password=Admin123&new_admin_password_confirm=Admin123&continue.x=32&continue.y=23"
    return_content: yes
    headers:
      Cookie: "{{initial_response.set_cookie}}"
  register: response
  
- name: Run initial setup wizard (step 9)
  uri:
    url: http://localhost:8080/openmrs/initialsetup
    method: POST
    body: "page=wizardcomplete.vm&continue.x=37&continue.y=29"
    return_content: yes
    headers:
      Cookie: "{{initial_response.set_cookie}}"
  register: response
